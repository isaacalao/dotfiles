#!/bin/env bash

# DESCRIPTION
#   Automate the installation of my environment on supported platforms
#
# TODO(isaacalao):
#   refactor this entire script and use styleguide


# Import isaacalao library
source ./ialib.sh;

# Logs each setup instance 
ialib::loginstance;

# Globals 
ARCH="$(ialib::getarch)";
OSTYPE="$(ialib::getos)";
DISTRO="";

# Functions 
null_bootstrap() {
  ialib::log "Not supported, please use the intended package manager for ${DISTRO}${OSTYPE} [${ARCH}] to install packages." warn;
}

osx_bootstrap() {

# TODO(isaacalao):
#     linkconf needs to accomodate more paths

  ialib::linkconf "$(pwd)"/macOS "${HOME}"
  ialib::log "Checking for brew on ${DISTRO}${OSTYPE} [${ARCH}]." warn;

  if ! which brew; then
    ialib::log "HOMEBREW IS NOT INSTALLED!" err;

    if ialib::prompt "Do you want to install it?"; then
      if [[ "$OSTYPE" = "darwin" ]]; then # OSX 10.15 and higher
        /bin/bash -c "$(curl -fsSL https://raw.github.com/Homebrew/install/HEAD/install.sh)";
        ialib::log "Adding Homebrew to your PATH." warn;
        if [ ! "$(grep -c "brew shellenv" "${HOME}/.zshalias")" -eq 1 ]; then
          echo "eval $(/opt/homebrew/bin/brew shellenv)" >> "${HOME}/.zshalias";
          eval "$(/opt/homebrew/bin/brew shellenv)";
        fi
        source "${HOME}/.zshalias";
      fi
    else
      ialib::log "User declined to install homebrew." err;
      return 1;
    fi
  else
    ialib::log "HOMEBREW IS ALREADY INSTALLED!" ok;
  fi

# TODO(isaacalao): 
#   Investigate
#     brew bundle with verbose output hangs when installing packages 
#     std::prompt "Do you want to initiate brew bundle (may require sudo)?" && brew -v bundle;

  return 0;
}

ubuntu_bootstrap() {
  null_bootstrap;
}

if [[ "$OSTYPE" = "darwin" ]]; then
  osx_bootstrap;
elif [[ "$OSTYPE" = "linux" ]]; then
  DISTRO="$(grep -w "ID" "/etc/os-release" | tr -d "A-Z=")";
  if [[ "$DISTRO" = "ubuntu" ]]; then
    ubuntu_bootstrap;
  else
    null_bootstrap;
  fi
else
  ialib::log "${OSTYPE} [${ARCH}] is not supported." warn;
fi

# Remove setup log
ialib::prompt "Do you want to remove the log file?" && \
  printf "\x1B[0m\nremoved: %s\n" "$(rm -v "${LOGNAME}")";

# Cleanup
unset OSTYPE ARCH DISTRO && \
unset -f null_bootstrap \
         osx_bootstrap \
         ubuntu_bootstrap;

exit 0; 
